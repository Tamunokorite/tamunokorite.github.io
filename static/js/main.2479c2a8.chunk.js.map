{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","todos","task","editIndex","editTask","editImportant","nextId","create","edit","important","completed","handleChange","bind","handleSubmit","deleteTodo","handleEdit","complete","event","name","target","value","this","setState","preventDefault","slice","find","toLowerCase","alert","push","id","filter","item","index","todoIndex","className","style","marginTop","onSubmit","htmlFor","type","onChange","onClick","defaultChecked","map","todo","display","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2479c2a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [],\r\n            task: '',\r\n            editIndex: -1,\r\n            editTask: '',\r\n            editImportant: false,\r\n            nextId: 1,\r\n            create: true, \r\n            edit: false,\r\n            important: false,\r\n            completed: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.editImportant = this.editImportant.bind(this);\r\n        this.complete = this.complete.bind(this);\r\n    }\r\n\r\n    handleChange(event) { \r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    editImportant(event) { \r\n        this.setState({\r\n            editImportant: !this.state.editImportant\r\n        });\r\n    }\r\n\r\n    complete(event) { \r\n        this.setState({\r\n            completed: !this.state.completed\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const todos = this.state.todos.slice();\r\n        let nextId = this.state.nextId;\r\n        if (this.state.task === \"\") {\r\n            return\r\n        }\r\n\r\n        if (this.state.todos.find(task => task.task.toLowerCase() === this.state.task.toLowerCase())) {\r\n            alert(\"Todo already exists\");\r\n            this.setState({\r\n                task: ''\r\n            });\r\n            return\r\n        }\r\n\r\n        const task = {\r\n            'id': this.state.nextId,\r\n            'task': this.state.task,\r\n            'completed': false,\r\n            'important': this.state.important\r\n        }\r\n\r\n        todos.push(task);\r\n\r\n        this.setState({\r\n            todos: todos,\r\n            task: '',\r\n            nextId: nextId++,\r\n            create: false,\r\n            important: false\r\n        });\r\n    }\r\n\r\n    deleteTodo(id) {\r\n        const todos = this.state.todos.slice();\r\n\r\n        this.setState({\r\n            todos: todos.filter((item, index) => (index !== id))\r\n        });\r\n    }\r\n\r\n    handleEdit(event) {\r\n        event.preventDefault();\r\n        const todos = this.state.todos.slice();\r\n        const todoIndex = this.state.editIndex;\r\n        todos[todoIndex].task = this.state.editTask;\r\n        todos[todoIndex].important = this.state.editImportant;\r\n        todos[todoIndex].completed = this.state.completed;\r\n\r\n        this.setState({\r\n            todos: todos,\r\n            editIndex: -1,\r\n            editTask: '',\r\n            edit: false,\r\n            editImportant: false,\r\n            completed: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.create) {\r\n            return (\r\n                <div>\r\n                    <div className=\"jumbotron bg-primary text-center col-md-12\" style={{marginTop: '-5px'}}>\r\n                        <h1>Todo App</h1>\r\n                    </div>\r\n\r\n                    <div className=\"container text-center\">\r\n                        <h2>Add Task</h2>\r\n        \r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"task\" className=\"sr-only\">Task: </label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"task\" id=\"task\" value={this.state.task} onChange={this.handleChange} /><br />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"important\" id=\"important\" onClick={this.handleChange} />\r\n                                <label htmlFor=\"important\">Important</label>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary\">Add</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.edit) {\r\n            if (this.state.editImportant) {\r\n                return (\r\n                    <div>\r\n                        <div className=\"jumbotron bg-primary text-center col-md-12\" style={{marginTop: '-5px'}}>\r\n                            <h1>Todo App</h1>\r\n                        </div>\r\n                        <div className=\"container text-center\">\r\n                        <h2>Edit Task</h2>\r\n                        <form onSubmit={this.handleEdit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"task\" className=\"sr-only\">Task: </label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"editTask\" id=\"task\" value={this.state.editTask} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"editImportant\" id=\"important\" defaultChecked onClick={this.editImportant} />\r\n                                <label htmlFor=\"important\">Important</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"completed\" id=\"completed\" onClick={this.complete} />\r\n                                <label htmlFor=\"completed\">Mark as Completed</label>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary\">Edit</button>\r\n                        </form>\r\n                    </div>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n            return (\r\n                <div>\r\n                    <div className=\"jumbotron bg-primary text-center col-md-12\" style={{marginTop: '-5px'}}>\r\n                        <h1>Todo App</h1>\r\n                    </div>\r\n                    <div className=\"container text-center\">\r\n                        <h2>Edit Task</h2>\r\n                        <form onSubmit={this.handleEdit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"task\" className=\"sr-only\">Task: </label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"editTask\" id=\"task\" value={this.state.editTask} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"editImportant\" id=\"important\" onClick={this.editImportant} />\r\n                                <label htmlFor=\"important\">Important</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"checkbox\" name=\"completed\" id=\"completed\" onClick={this.complete} />\r\n                                <label htmlFor=\"completed\">Mark as Completed</label>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary\">Edit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron bg-primary text-center col-md-12\" style={{marginTop: '-5px'}}>\r\n                    <h1>Todo App</h1>\r\n                </div>\r\n\r\n                <div className=\"container text-center\">\r\n                    <h2 className=\"h3\">Add Task</h2>\r\n    \r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"task\" className=\"sr-only\">Task: </label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"task\" id=\"task\" value={this.state.task} onChange={this.handleChange} /><br />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"checkbox\" name=\"important\" id=\"important\" onClick={this.handleChange} />\r\n                            <label htmlFor=\"important\">Important</label>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-lg btn-primary\">Add</button>\r\n                    </form>\r\n\r\n                </div>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <h2 className=\"mt-3\">Tasks</h2>\r\n\r\n                    <table className=\"table col-md-12\">\r\n                        <thead>\r\n                            <th>S/No.</th>\r\n                            <th>Task</th>\r\n                            <th>Options</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.todos.map((todo, index) => (\r\n                            <tr className = {todo.completed ? 'bg-success' : (todo.important ? \"bg-danger\" : \"bg-secondary\")}>\r\n                                <td>{index+1}</td>\r\n                                <td>{todo.task}</td>\r\n                                <td><button \r\n                                    type=\"button\"\r\n                                    onClick={() => this.setState({\r\n                                        editIndex: index,\r\n                                        editTask: todo.task,\r\n                                        edit: true,\r\n                                        editImportant: todo.important,\r\n                                    })}\r\n                                    style={{display: todo.completed ? 'none' : 'inline'}}\r\n                                    className=\"btn text-white\" \r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                                <button type=\"button\" className=\"btn text-white\" onClick={() => this.deleteTodo(index)}>Delete</button></td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}